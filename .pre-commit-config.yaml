exclude: 'build'

default_language_version:
    python: python3

default_install_hook_types: [pre-commit]
exclude: |
  (?x)^(
                outputs/|
                wandb/|
                multirun/|
                dev/|
                data/|
                dev/|
                checkpoints/|
                notebooks/|
                .pre-commit-config.yaml|
                DeepGEMM/
  )$

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 6306a48f7dae5861702d573c9c247e4e9498e867
    hooks:
    -   id: trailing-whitespace
        exclude: '(^|/)AGENTS\.md$'
    -   id: check-ast
    -   id: check-merge-conflict
    -   id: no-commit-to-branch
        args: ['--branch=main']
    -   id: check-added-large-files
        args: ['--maxkb=500']
    -   id: end-of-file-fixer
        exclude: '(^|/)(.*\.svg|AGENTS\.md)$'

-   repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
    -   id: insert-license
        files: \.py$
        args:
        - --license-filepath
        - assets/license_header.txt

-   repo: https://github.com/pycqa/flake8
    rev: 34cbf8ef3950f43d09b85e2e45c15ae5717dc37b
    hooks:
    -   id: flake8
        additional_dependencies:
          - flake8-bugbear == 22.4.25
          - pep8-naming == 0.12.1
          - torchfix
        args: ['--config=.flake8']

# Advanced linting/type checking for torchtitan/experiments/fl/ only
# NOTE: Ruff runs BEFORE ufmt so that ufmt gets the final say on formatting
-   repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.0
    hooks:
      # Run the Ruff linter
      - id: ruff
        name: ruff (fl experiments only)
        args: [--config=ruff.toml, --fix]
        files: ^torchtitan/experiments/fl/

-   repo: https://github.com/omnilib/ufmt
    rev: v2.3.0
    hooks:
    -   id: ufmt
        additional_dependencies:
          - black == 22.12.0
          - usort == 1.0.5

- repo: https://github.com/jsh9/pydoclint
  rev: d88180a8632bb1602a4d81344085cf320f288c5a
  hooks:
    - id: pydoclint
      args: [--config=pyproject.toml]

-   repo: local
    hooks:
    -   id: generate-agents-md
        name: Generate AGENTS.MD from project
        description: "Runs embargo to create AGENTS.MD with a project summary."
        entry: precommit-hooks/run_embargo.sh
        language: script
        # This hook analyzes the whole project, so it should always run on every commit.
        always_run: true
        # The script doesn't need the list of changed files passed as arguments.
        pass_filenames: false
        stages: [pre-commit]
        exclude: '(^|/)AGENTS\.md$'

    

