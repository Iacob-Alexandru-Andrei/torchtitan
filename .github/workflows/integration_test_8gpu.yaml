name: 8 GPU Integration Test

on:
  push:
    branches: [ main ]
  pull_request:
  schedule:
    # Runs every 6 hours
    - cron: '0 */6 * * *'
concurrency:
  group: unit-test${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l -eo pipefail {0}

jobs:
  build-test:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: linux.g5.48xlarge.nvidia.gpu
      gpu-arch-type: cuda
      gpu-arch-version: "12.4"
      # This image is faster to clone than the default, but it lacks CC needed by triton
      # (1m25s vs 2m37s).
      docker-image: torchtitan-ubuntu-20.04-clang12
      repository: pytorch/torchtitan
      upload-artifact: outputs
      script: |
        set -eux

        # The generic Linux job chooses to use base env, not the one setup by the image
        CONDA_ENV=$(conda env list --json | jq -r ".envs | .[-1]")
        conda activate "${CONDA_ENV}"

        pip config --user set global.progress_bar off

        python -m pip install --force-reinstall --pre torch --index-url https://download.pytorch.org/whl/nightly/cu124

        # install torchtitan to test the files in ./scripts
        python -m pip install -e .

        mkdir artifacts-to-be-uploaded

        #python ./tests/integration_tests.py artifacts-to-be-uploaded --ngpu 8

        # Don't install TorchFT until the previous integration_tests is complete.
        # This allows us to verify the case where users don't have TorchFT installed.
        # TorchFT is not the mandatory package because it requires Rust and is still
        # under early development stage.
        echo "curl"
        curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh
        echo "install maturin"
        pip install maturin
        echo "clone torchft "
        git clone https://github.com/pytorch/torchft
        echo "pip install torchft"
        pushd torchft; pip install .; popd
        echo "torchft_lighthouse"
        #RUST_BACKTRACE=1 torchft_lighthouse --min_replicas 1 --quorum_tick_ms 100 --join_timeout_ms 10000 > /dev/null 2>&1 &
        echo "ft_integration_test"
        #python ./tests/ft_integration_tests.py artifacts-to-be-uploaded --ngpu 8
        #killall -9 torchft_lighthouse
